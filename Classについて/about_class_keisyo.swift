// クラスの継承について
// BというクラスがAクラスを経由するとき、Aが持っているプロパティとメソッドは全て引き継がれる
// A :親クラス　基底クラス　スーパークラス
// B:子クラス　サブクラス

class Car{
  // プロパティ
  // プロパティとは状態のこと。例）車で例えると「速度・車の名前・機内温度など」
  let name : String = "ランサー"
  var temperture :Int = 24

  // メソッド
  // メソッドとは振る舞いのこと　例)車で例えると「アクセルを踏むと前に進む」などなど
  func say() ->() {
    print("\(name) : 室内温度は\(temperture)です。")
  }
}

// 子クラスの作成　Carクラスを継承する
class SuperCar : Car{

}

let super_car = SuperCar()
super_car.say()

// 上記を実行すると以下のように返ってくるので継承されていることがわかる
// ランサー : 室内温度は24です。

// 継承の反対語の汎化について
// 汎化は下から上の流れのイメージ。
// →共通部分を見つけてスーパークラスにする。
